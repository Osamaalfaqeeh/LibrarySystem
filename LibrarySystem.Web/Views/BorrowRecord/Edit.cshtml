@model LibrarySystem.Web.ViewModels.BorrowRecordEditViewModel
@{
    ViewData["Title"] = "Edit Borrow Record";
}

<div class="page-header px-4 py-3">
    <div class="d-flex justify-content-between align-items-center">
        <div>
            <h1 class="page-title">
                <i class="fas fa-edit"></i>
                Edit Borrow Record
            </h1>
            <p class="page-subtitle">Update the due date for this borrow record</p>
        </div>
    </div>
</div>

<nav aria-label="breadcrumb" class="mb-4">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Dashboard</a></li>
        <li class="breadcrumb-item"><a asp-action="Index">Borrow Records</a></li>
        <li class="breadcrumb-item active" aria-current="page">Edit</li>
    </ol>
</nav>

<div class="row justify-content-center">
    <div class="col-md-8">
        <div class="card shadow">
            <div class="card-body">
                <form asp-action="Edit" method="post">
                    <input type="hidden" asp-for="UpdateDto.Id" />

                    <div class="form-group mb-3">
                        <label class="form-label">
                            <i class="fas fa-user me-1"></i>
                            User
                        </label>
                        <input class="form-control" value="@Model.MemberFullName" disabled />
                        <small class="form-text text-muted">User cannot be changed</small>
                    </div>

                    <div class="form-group mb-3">
                        <label class="form-label">
                            <i class="fas fa-book me-1"></i>
                            Book
                        </label>
                        <input class="form-control" value="@Model.BookTitle" disabled />
                        <small class="form-text text-muted">Book cannot be changed</small>
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="UpdateDto.DueDate" class="form-label">
                            <i class="fas fa-calendar-check me-1"></i>
                            Due Date
                        </label>
                        <input asp-for="UpdateDto.DueDate" class="form-control" type="date" id="dueDate" />
                        <span asp-validation-for="UpdateDto.DueDate" class="text-danger"></span>
                        <small class="form-text text-muted">Due date must be at least tomorrow</small>
                    </div>

                    <div class="form-group mt-4">
                        <button type="submit" class="btn btn-primary me-2">
                            <i class="fas fa-save me-1"></i>
                            Save Changes
                        </button>
                        <a asp-action="Index" class="btn btn-secondary">
                            <i class="fas fa-times me-1"></i>
                            Cancel
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function() {
            // Set minimum date to tomorrow
            var tomorrow = new Date();
            tomorrow.setDate(tomorrow.getDate() + 1);
            var minDate = tomorrow.toISOString().split('T')[0];

            $('#dueDate').attr('min', minDate);

            // If current due date is before tomorrow, update it to tomorrow
            var currentDueDate = $('#dueDate').val();
            if (currentDueDate && currentDueDate < minDate) {
                $('#dueDate').val(minDate);
            }
        });
    </script>
}